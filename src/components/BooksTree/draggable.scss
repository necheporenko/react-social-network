.draggable-demo {
	.draggable-container {
		width: 100%;
		height: 110%;
		overflow: hidden;
	}
	.react-tree-item-dropped {
		animation: blink 0.6s linear infinite;
	}
}
.react-tree {
	a {
		text-decoration: none;
		color: #222;
		font-size: 14px;
	}
}

@keyframes blink {
	50% {
		opacity: 0.5;
	}
}


//urls
$url_0: url(https://t.alipayobjects.com/images/T1.ANfXhXtXXXXXXXX.png);
$valid_color: #1976d2;
//@extend-elements
//original selectors
//.react-tree li .draggable[draggable], .react-tree li .draggable[draggable="true"]
%extend_1 {
  display: block;
  color: #333;
  //Instead of the line below you could use @include user-select($select)
  user-select: none;
}

//original selectors
//.react-tree li .react-tree-item-label .draggable[draggable]::before, .react-tree li .react-tree-item-label .draggable[draggable]::before
%extend_2 {
  display: none;
  content: '\0020';
  position: absolute;
  left: 0;
  right: 0;
  border-top: 2px $valid_color solid;
  z-index: 1;
  pointer-events: none;
}

//original selectors
//.react-tree li span.react-tree-expander, .react-tree li span.react-tree-checkbox, .react-tree li span.react-tree-iconEle
%extend_3 {
  line-height: 16px;
  margin-right: 2px;
  width: 16px;
  height: 16px;
  display: inline-block;
  vertical-align: middle;
  border: 0 none;
  cursor: pointer;
  outline: none;
}

//original selectors
//.react-tree li span.react-tree-checkbox, .react-tree li span.react-tree-iconEle
%extend_4 {
  background-color: transparent;
  background-repeat: no-repeat;
  background-attachment: scroll;
  background-image: $url_0;
}

//original selectors
//.react-tree li span.react-tree-expander:before, .react-tree li span.react-tree-expander::before
%extend_5 {
  position: absolute;
  font-size: 0.6em;
  display: inline-block;
  width: 16px;
  height: 16px;
  line-height: 16px;
  text-align: center;
  top: 0;
  left: 7px;
  content: '\0020';
  //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
  transform: rotate(0deg);
  //Instead of the line below you could use @include transform-origin($origin-x, $origin-y, $origin-z, $only3d)
  transform-origin: 50% 50%;
  //Instead of the line below you could use @include transition($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10)
  transition: transform 0.1s ease-in;
}


.react-tree {
  margin: 0;
  //padding: 3px 5px;
  li {
    padding: 0;
    //list-style: none;
    //white-space: nowrap;
    //outline: 0;
    //width: 210px;
    //padding-right: 35px;

    .react-tree-item-label {
      position: relative;
      padding: 3px 30px 3px 0;
      //padding-right: 30px;
      &:hover {
        background-color: #E1E1E1;
      }
      .react-tree-expander,
      .react-tree-expander-noop {
        position: absolute;
        top: 12px;                                         //0
        left: 0;
        z-index: 1;
      }
      .draggable[draggable] {
        position: relative;
      }
      .draggable[draggable]::before {
        @extend %extend_2;
        @extend %extend_2;
      }
    }

    .draggable[draggable] {
      @extend %extend_1;
      > a {
        text-decoration: none;
        display: block;
      }
    }
    .draggable[draggable="true"] {
      @extend %extend_1;
      > a {
        text-decoration: none;
        display: block;
        width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }
    ul {
      margin: 0;
      padding: 0;
    }
    .draggable {
      display: inline-block;
      padding: 3px; 												//0 2px
      cursor: pointer;
      text-decoration: none;
      vertical-align: top;
    }
    span {
      &.react-tree-expander {
        @extend %extend_3;
        background: none;
        position: relative;
        &:before {
          @extend %extend_5;
        }
        &.react-tree-expander_close::before {
          content: '';
          width: 0;
          height: 0;
          border-top: 5px solid transparent;
          border-right: 5px solid transparent;
          border-left: 5px solid #777777;
          border-bottom: 5px solid transparent;
        }
        &.react-tree-expander_open::before {
          content: '';
          width: 0;
          height: 0;
          border-top: 5px solid transparent;
          border-right: 5px solid transparent;
          border-left: 5px solid #777777;
          border-bottom: 5px solid transparent;
          //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
          transform: rotate(90deg);
        }
        &.react-tree-expander_close:before {
          content: '';
          width: 0;
          height: 0;
          border-top: 5px solid transparent;
          border-right: 5px solid transparent;
          border-left: 5px solid #777777;
          border-bottom: 5px solid transparent;
          transform-origin: left;
        }
        &.react-tree-expander_open:before {
          content: '';
          width: 0;
          height: 0;
          border-top: 5px solid transparent;
          border-right: 5px solid transparent;
          border-left: 5px solid #777777;
          border-bottom: 5px solid transparent;
          transform: rotate(90deg);
          transform-origin: left;
        }
      }
      &.react-tree-checkbox {
        @extend %extend_3;
        @extend %extend_4;
        width: 13px;
        height: 13px;
        margin: 0 3px;
        background-position: 0 0;
        &.react-tree-checkbox-indeterminate {
          &.react-tree-checkbox-disabled {
            position: relative;
            background: #ccc;
            //Instead of the line below you could use @include border-radius($radius, $vertical-radius)
            border-radius: 3px;
          }
          &.react-tree-checkbox-disabled::after {
            content: ' ';
            //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
            transform: scale(1);
            position: absolute;
            left: 3px;
            top: 5px;
            width: 5px;
            height: 0;
            border: 2px solid #fff;
            border-top: 0;
            border-left: 0;
          }
        }
        &.react-tree-checkbox-checked.react-tree-checkbox-disabled {
          background-position: -14px -56px;
        }
      }
      &.react-tree-iconEle {
        @extend %extend_3;
        @extend %extend_4;
      }
      &.react-tree-expander::before {
        @extend %extend_5;
      }
      &.react-tree-checkbox-checked {
        background-position: -14px 0;
      }
      &.react-tree-checkbox-indeterminate {
        background-position: -14px -28px;
      }
      &.react-tree-checkbox-disabled {
        background-position: 0 -56px;
      }
    }
    &.drag-over > .react-tree-item-label .draggable[draggable] {
      // background-color: #2d79d9;
      // color: white;
      border: 1px dashed #2d79d9;
      border-radius: 5px;
      a {
        // background-color: #2d79d9;
        // color: white;
      }
    }
    &.drag-over-gap-top > .react-tree-item-label .draggable[draggable]::before {
      display: block;
      top: 0;
    }
    &.drag-over-gap-bottom > .react-tree-item-label .draggable[draggable]::before {
      display: block;
      bottom: 0;
    }
    &.filter-node > .react-tree-item-label .draggable {
      color: #a60000!important;
      font-weight: bold!important;
    }
  }
}
.react-tree-child-tree {
  display: none;
}
.react-tree-child-tree-open {
  display: block;
}

.react-tree-icon__open {
  margin-right: 2px;
  background-position: -110px -16px;
  vertical-align: top;
}
.react-tree-icon__close {
  margin-right: 2px;
  background-position: -110px 0;
  vertical-align: top;
}
.sk-wave {
  display: inline-block;
  margin: 0 auto;
  width: 20px;
  height: 16px;
  text-align: center;
  font-size: 10px;
  vertical-align: center;
  .sk-rect {
    background-color: #333;
    height: 100%;
    width: 1px;
    margin-left: 1px;
    display: inline-block;
    animation: sk-waveStretchDelay 1.2s infinite ease-in-out;
    &.sk-rect1 {
      animation-delay: 0s;
    }
    &.sk-rect2 {
      animation-delay: 0.1s;
    }
    &.sk-rect3 {
      animation-delay: 0.2s;
    }
    &.sk-rect4 {
      animation-delay: 0.3s;
    }
    &.sk-rect5 {
      animation-delay: 0.4s;
    }
  }
}
@keyframes sk-waveStretchDelay {
  0% {
    //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
    transform: scaleY(0.4);
  }
  40% {
    //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
    transform: scaleY(0.4);
  }
  100% {
    //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
    transform: scaleY(0.4);
  }
  20% {
    //Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
    transform: scaleY(1);
  }
}
.react-tree-treenode-disabled > .react-tree-item-label {
  span {
    color: #ccc;
    //cursor: not-allowed;
  }
  .draggable {
    color: #ccc;
    cursor: not-allowed;
    span {
      color: #ccc;
      cursor: not-allowed;
    }
  }
}

/* === Add new style ===*/
$sprite: url('http://validbook.org/images/main_sprite.png') no-repeat;


.not_show {										//disable parent
  display: block;
  .react-tree-item-label {
    display: none;
  }
  .react-tree-child-tree {
    .react-tree-item-label {
      display: block;
      height: 26px;
    }
  }
}

.icon_public, .icon_bin, .icon_private {
  .draggable {
    a:before {
      background: $sprite;
      content: '';
      display: inline-block;
      position: relative;
    }
  }
}

.icon_public {
  .draggable {
    a:before {
      background-position: -86px -515px;
      height: 15px;
      width: 16px;
      top: 4px;
      margin-right: 5px;
    }
  }
}

.icon_private {
  .draggable {
    a:before {
      background-position: -52px -515px;
      height: 15px;
      width: 18px;
      top: 4px;
      margin-right: 5px;
    }
  }
}

.not_drag {
  span {
    margin-left: 3px;
    display: block;
    margin-top: 3px;
    a:before {
      content: '';
      background: $sprite;
      background-position: -86px -515px;
      display: inline-block;
      position: relative;
      height: 15px;
      width: 16px;
      top: 4px;
      margin-right: 5px;
    }
  }
}

.icon_bin {
  .draggable {
    a:before {
      background-position: -74px -282px;
      height: 14px;
      width: 15px;
      top: 2px;
      margin-right: 5px;
    }
  }
}
